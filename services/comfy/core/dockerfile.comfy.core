FROM runtime AS core

# Remove ubuntu user and create standard comfy user for container
# https://askubuntu.com/questions/1513927/ubuntu-24-04-docker-images-now-includes-user-ubuntu-with-uid-gid-1000
RUN touch /var/mail/ubuntu && \
    chown ubuntu /var/mail/ubuntu && \
    userdel -r ubuntu

# Create standard non-root user (no fixed UID/GID for k8s compatibility)
RUN groupadd comfy && \
    useradd -m -g comfy comfy && \
    mkdir -p /app && \
    chown -R comfy:comfy /app

USER comfy

WORKDIR /home/comfy

SHELL ["/bin/bash", "--login", "-c"]

# Setup Python virtual environment for ComfyUI
ENV VENV_PATH=/home/comfy/venv
ENV XDG_CACHE_HOME=/home/comfy/.cache

# Create Python virtual environment
RUN python3 -m venv $VENV_PATH && \
  echo "source $VENV_PATH/bin/activate" >> ~/.bashrc

ENV PATH="$VENV_PATH/bin:$PATH"

# Install ComfyUI to temp location and move to /app (standard Docker practice)
ARG RUNTIME=cuda
RUN --mount=type=cache,mode=0755,target=/home/comfy/.cache/pip \
  source $VENV_PATH/bin/activate && \
  pip install comfy-cli && \
  if [ "$RUNTIME" = "cuda" ]; then \
    comfy --skip-prompt --workspace /home/comfy/comfyui install --nvidia; \
  else \
    comfy --skip-prompt --workspace /home/comfy/comfyui install --cpu; \
  fi && \
  mv /home/comfy/comfyui/* /app/ && \
  mv /home/comfy/comfyui/.* /app/ 2>/dev/null || true && \
  rmdir /home/comfy/comfyui && \
  comfy --skip-prompt set-default /app && \
  comfy --skip-prompt --no-enable-telemetry env

# Set working directory to /app after ComfyUI installation
WORKDIR /app

# Copy startup scripts after ComfyUI installation
COPY --chown=comfy:comfy startup.sh entrypoint.sh ./

RUN pip cache purge && \
  chmod u+x ./entrypoint.sh && \
  chmod u+x ./startup.sh

# Set environment variables (simplified for /app structure)
ARG CLI_ARGS=""
ARG COMFY_PORT=8188

# Only essential environment variables needed
ENV CLI_ARGS=$CLI_ARGS
ENV COMFY_PORT=$COMFY_PORT

EXPOSE $COMFY_PORT

ENTRYPOINT ["./entrypoint.sh"]

CMD ["bash", "./startup.sh"]